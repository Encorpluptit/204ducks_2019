name: Build

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov
          # pip install -r requirements.txt

      - name: Build Script
        run: bash ./.github/scripts/Build.sh "make" "make fclean" "make re" "make tests_run"

      - name: Upload Coverage
        env:
          CODECOV_TOKEN: "5c4ca17e-6dbf-4570-a9a6-b6b29d857432"
        run: bash <(curl -s https://codecov.io/bash)

  blih:
    runs-on: ubuntu-latest
    needs: build
    env:
      USER_GHUB: "Encorpluptit"
      USER_BLIH: "damien.bernard@epitech.eu"
    steps:
      - uses: actions/checkout@v2
      - run: |
          which ssh-agent || ( sudo apt-get update -y && sudo apt-get install openssh-client -y)
          eval $(ssh-agent -s)
          mkdir -p ~/.ssh && chmod 700 ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 700 ~/.ssh/id_rsa && echo "${{ secrets.SSH_PUBLIC_KEY }}" > ~/.ssh/id_rsa.pub
          echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
      - name: Set Github Repo Name in env
        run:   echo ::set-env name=REPOSITORY_NAME::$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}' | sed -e "s/:refs//")
        shell: bash
      - name: Push Blih
        run: bash ./.github/scripts/GithubToBlih.sh $REPOSITORY_NAME
        shell: bash

#  docker_test:
#    runs-on: ubuntu-latest
#    name: A job to say hello
#    steps:
#      # To use this repository's private action, you must check out the repository
#      - name: Checkout
#        uses: actions/checkout@v2
##       - name: lol
##         uses: docker run epitechcontent/epitest-docker
#      - name: Hello world action step
#        uses: ./.github/docker # Uses an action in the .github/docker directory
#        #uses: ./ # Uses an action in the root directory
#        id: hello
#        with:
#          who-to-greet: 'Mona the Octocat'
#      # Use the output from the `hello` step
#      - name: Get the output time
#        run: echo "The time was ${{ steps.hello.outputs.time }}"
