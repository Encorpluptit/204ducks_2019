name: "Synchronise Blih"

on:
  push:
#  schedule:
#    - cron: "*/5 * * * *"

jobs:
  blih:

    runs-on: ubuntu-latest
    env:
      USER_GHUB: "Encorpluptit"
      USER_BLIH: "damien.bernard@epitech.eu"
    steps:
      - uses: actions/checkout@v2
#       - uses: webfactory/ssh-agent@v0.2.0
#         with:
#           ssh-public-key: ${{ secrets.SSH_PUBLIC_KEY }}
#           ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
#       - run: |
#           mkdir ~/.ssh
#           echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
#           chmod 600 ~/.ssh/id_rsa
#           ssh-keyscan -t rsa git.epitech.eu
      - run: |
          which ssh-agent || ( sudo apt-get update -y && sudo apt-get install openssh-client -y )
          eval $(ssh-agent -s)
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 700 ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PUBLIC_KEY }}" > ~/.ssh/id_rsa.pub
          echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
# echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' | ssh-add -
      - name: Set Github Repo Name in env
        run:   echo ::set-env name=REPOSITORY_NAME::$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}' | sed -e "s/:refs//")
        shell: bash
      - name: Push Blih
#         run: bash ./.github/workflows/GithubToBlih.sh $REPOSITORY_NAME
        run : |
          git remote add tek git@git.epitech.eu:/$USER_BLIH/$REPOSITORY_NAME
          git push tek
        shell: bash


  docker_test:
    runs-on: ubuntu-latest
    name: A job to say hello
    steps:
      # To use this repository's private action, you must check out the repository
      - name: Checkout
        uses: actions/checkout@v2
#       - name: lol
#         uses: docker run epitechcontent/epitest-docker
      - name: Hello world action step
        uses: ./.github/docker # Uses an action in the .github/docker directory
        #uses: ./ # Uses an action in the root directory
        id: hello
        with:
          who-to-greet: 'Mona the Octocat'
      # Use the output from the `hello` step
      - name: Get the output time
        run: echo "The time was ${{ steps.hello.outputs.time }}"

